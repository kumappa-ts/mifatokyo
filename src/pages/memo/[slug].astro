---
import type { GetStaticPaths } from "astro";
import type { GetStaticPaths } from "astro";
import Page from '../../components/common/page.astro';
import { Image } from 'astro:assets';
import { client, getBlogs, getBlogDetail, type Post, formatDate } from '../../library/microcms';
import { load } from "cheerio";
import hljs from "highlight.js";
import "highlight.js/styles/vs2015.css";
export async function getStaticPaths() {
  try {
    const posts = await getBlogs();
    return posts.map((post) => ({
      params: { slug: post.id },
    }));
  } catch (error) {
    console.error('Error in getStaticPaths:', error);
    return []; // 空配列を返す
  }
}

const { slug } = Astro.params;
const post = await getBlogDetail(slug as string);
console.log('post data:', {
  title: post.title,
  content: post.contents?.slice(0, 100), // 最初の100文字だけ表示
});
// cheerioでコードブロックを抜き出し、シンタックスハイライトを適用
const $ = load(post.contents);
$("code").each((_, elm) => {
  const result = hljs.highlightAuto($(elm).text());
  $(elm).html(result.value);
  $(elm).addClass("hljs");
});
post.contents = $.html();
// ====== 追加する処理 ここまで ======
---

<Page title={post.title} currentTitle={post.title}>
  <!-- <div class="page-headline">memo</div> -->
  <div class="article">
    <article class="article-inner">
      {post.thumbnail && (
        <div class="article-thumbnail">
          <Image
            src={`${post.thumbnail.url}?fm=webp&q=80`}
            width={post.thumbnail.width}
            height={post.thumbnail.height}
            alt={post.title}
          />
        </div>
      )}
      <div class="article-header border-block">
        <time datetime={post.datepick} class="article-date">
          {formatDate(post.datepick)}
        </time>
        <h1 class="article-title">{post.title}</h1>

      </div>
      <div class="article-content border-block text" set:html={post.contents} />
      <aside class="aside-articles">
        <div class="treat">
          <svg width="573" height="28" viewBox="0 0 573 28" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M3 14C14.8125 0.666667 26.625 0.666667 38.4375 14C50.25 27.3333 62.0625 27.3333 73.875 14C85.6875 0.666667 97.5 0.666667 109.312 14C121.125 27.3333 132.937 27.3333 144.75 14C156.562 0.666667 168.375 0.666667 180.187 14C192 27.3333 203.812 27.3333 215.625 14C227.437 0.666667 239.25 0.666667 251.062 14C262.875 27.3333 274.687 27.3333 286.5 14C298.312 0.666667 310.125 0.666667 321.937 14C333.75 27.3333 345.562 27.3333 357.375 14C369.187 0.666667 381 0.666667 392.812 14C404.625 27.3333 416.437 27.3333 428.25 14C440.062 0.666667 451.875 0.666667 463.687 14C475.5 27.3333 487.312 27.3333 499.125 14C510.937 0.666667 522.75 0.666667 534.562 14C546.375 27.3333 558.187 27.3333 570 14" stroke="white" stroke-width="8"/>
          </svg>
          <div class="aside-title">
            <div class="aside-title__en">other memo</div>
            <div class="aside-title__ja">他の備忘録</div>
          </div>
        </div>
      </aside>
    </article>
  </div>
</Page>

<style lang="scss">
  @use '../../styles/variables' as *;
  @use '../../styles/_mixins' as *;
  .page-headline{
    font-weight: 900;
    -webkit-text-stroke: 10px $black;
    paint-order: stroke;
    writing-mode: vertical-rl;
    font-size: 22cqi;
    color: $white;
    z-index: 2;
    position: absolute;
    top: 0;
    left: -4cqi;
    line-height: 1;
    opacity: .8;
  }
  .article-thumbnail {
    margin-bottom: -.8rem;
    img {
      width: 100%;
      height: auto;
      object-fit: cover;
    }
  }
  .article {
    position: relative;
    min-inline-size: 0;
    display: grid;
  }
  .article-inner{
    min-inline-size: 0;
    position: relative;
    z-index: 5;
  }

  .article-header{
    position: relative;
    z-index: 3;
    padding: 6cqi;
    background: rgba($white, .95);
    // border: var(--default-border);
    display: grid;
    gap: 1rem;
  }
  .article-date {
    display: block;
    font-size: $text14;
    font-weight: 800;
  }
  .article-title {
    font-size: $text28;
    font-weight: 500;
  }
  .article {
    .article-content {
      background: rgba($white, .95);
      position: relative;
      z-index: 5;
      padding: 6cqi;
      margin-top:-.8rem;
      :global(h2) {
        font-size: $text24;
        margin: 3rem 0 2rem;
        position: relative;
        display: flex;
        align-items: center;
        padding: 0 2em;
        &:before{
          content: '';
          aspect-ratio: 1;
          border-radius: 50%;
          background: $black;
          display: block;
          width: 1.5em;
          height: 1.5em;
          position: absolute;
          left: 0;
          bottom: 0;
        }
        &:after{
          content: '';
          background: $black;
          position: absolute;
          bottom: 0;
          right: 0;
          height: 2px;
          width: calc(100% - .9em);
        }
      }
      :global(h3) {
        font-size: $text20;
        margin: 3rem 0 2rem;
        position: relative;
        padding-left: 1.2em;
        &:before{
          content: '';
          aspect-ratio: 1;
          clip-path: polygon(0 0, 0% 100%, 100% 0);
          background: $gray;
          display: block;
          position: absolute;
          left: 0;
          top: 0;
          width: 1em;
          height: 1em;
        }
      }
      :global(p) {
        margin: 1em 0 ;
      }
      :global(p a){
        color: #F9A620;
        text-decoration: underline;
      }
      :global(ul) {
        background: $white;
        padding: 1em 1em 1em 2.5em;
        border: 2px dotted;
        border-radius: 0.5rem;
      }
      :global(code) {
        padding: 1rem 2rem;
        border-radius: 0.5rem;
        user-select: text;
        display: block;
        margin-top: 2rem;
      }
      :global(code::selection) {
        background: $white;
        color: $black;
      }
      :global(img) {
        max-width: 100%;
        height: auto;
        width: auto;
        margin: auto;
      }
      :global(blockquote) {
        padding: 0.8em 1em;
        background: rgba($gray,.1);
        position: relative;
        &:before,
        &:after{
          content: '';
          position: absolute;
          aspect-ratio: 1;
          width: $text16;
          background: $gray;

        }
        &:before{
          clip-path: polygon(0 0, 0% 100%, 100% 0);
          top: 1cqi;
          left: 1cqi;
        }
        &:after{
          clip-path: polygon(100% 100%, 0% 100%, 100% 0);
          bottom: 1cqi;
          right: 1cqi;
        }
      }
    }
  }
  .aside-articles{
    position: relative;
    z-index: 0;
    padding: 6cqi 0 ;
    margin-top: -1rem;
    background: $black;
    .treat svg{
      width: 100%;
      height: auto;
      object-fit: contain;
      display: block;
    }
  }
  .aside-title{
    position: relative;
    text-align: center;
    display: grid;
    align-items: baseline;
    margin: 4cqi 0;
  }
  .aside-title__en{
    grid-column: 1/2;
    grid-row: 1/2;
    line-height: 1;
    font-size: 12cqi;
    color: $white;
  }
  .aside-title__ja{
    grid-column: 1/2;
    grid-row: 1/2;
    background: $black;
    width: fit-content;
    margin: 0 auto;
    color: $white;
    font-size: $text18;
    font-weight: bold;
    -webkit-text-stroke: .5px $black;

  }
</style>
