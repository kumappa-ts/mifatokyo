---
interface Props {
  label: string;
  title?: string;
  class: string;
}
const { label, title = "other More" , class: className} = Astro.props;
---

<hgroup class=`index-headline ${className}`>
  <p class="index-headline-label split-type">{label}</p>
  <h2 class="index-headline-title split-type">{title}</h2>
</hgroup>

<style lang="scss">
  @use '../../styles/_variables' as *;
  @use '../../styles/_mixins' as *;
  .index-headline{
    display: grid;
    align-items: baseline;
    // margin-bottom: 6cqi;
  }
  .index-headline-label{
    font-size: 25cqi;
    font-weight: bold;
    line-height: 1;
    -webkit-text-stroke: 6px $black;
    paint-order: stroke;
    filter: drop-shadow(2px 4px 0px #ccc);
    @include mq {
      -webkit-text-stroke: 6px $black;
    }
  }
  .index-headline-title{
    font-size: $text24;
    font-weight: 500;
    letter-spacing: 0.2em;
    position: relative;
    display: flex;
    gap: 2cqi;
    align-items: center;
    &:before{
      content: '';
      display: block;
      width: 12cqi;
      height: 2px;
      background: currentColor;
    }
  }
</style>
<script>
  import { gsap } from "gsap";
  import SplitType from 'split-type';
  const headingLabel = document.querySelectorAll(".index-headline-label");
  const headingTitle = document.querySelectorAll(".index-headline-title");

  new SplitType(headingLabel, {
    types: 'chars',
    tagName: 'span'
  });
  new SplitType(headingTitle, {
    types: 'chars',
    tagName: 'span'
  });
  const indexSectionTitleTimeline = gsap.timeline({
    scrollTrigger: {
      trigger:".index-headline",//この要素が画面内に入ったときに再生
      markers:true, //startとendの位置を確認できるデバッグ用マーカー
    }
  })
  indexSectionTitleTimeline
  .to(headingLabel, {
    opacity:1,
    duration: 0.6,
    ease: "power2.inOut",
  });
  document.addEventListener("DOMContentLoaded", () => {

  });
</script>
